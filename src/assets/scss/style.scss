@import "./variables";
@import url("//at.alicdn.com/t/font_1673692_irn2xx6f2xn.css");
//reset
* {
  box-sizing: border-box;
  outline: none;
  -webkit-overflow-scrolling: touch;
}
html {
  @media only screen and (max-width: 320px) {
    font-size: 14px;
  }
  font-size: 18px;
  height: 100%;
  overflow: hidden;
  width: 100%;
}
body {
  margin: 0;
  padding: 0;
  line-height: 1.2em;
  height: 100%;
  overflow: hidden;
  width: 100%;
  font-family:'montserrat', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Helvetica, "PingFang SC",
    "Hiragino Sans GB", "Microsoft YaHei", SimSun, sans-serif;
  user-select: none;
}
a {
  text-decoration: none;
  color: #999;
}
p {
  line-height: 1.5em;
}
//text
//靠左 居中 靠右
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}
//文字颜色
@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
}
//文字省略
.text-omit {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
//背景颜色
@each $colorKey, $color in $colors {
  .bg-#{$colorKey} {
    background-color: $color;
  }
}
//文字尺寸大小
@each $sizeKey, $size in $sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}
.fs-bold {
  font-weight: 800;
}
.fs-light {
  font-weight: lighter;
}
//flex布局
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}
.flex-wrap {
  flex-wrap: wrap;
}
//justify-content属性
@each $k, $v in $jc {
  .jc-#{$k} {
    justify-content: $v;
  }
}
//justify-content属性
@each $k, $v in $ai {
  .ai-#{$k} {
    align-items: $v;
  }
}

//边距
@each $typeKey, $type in $spacing-types {
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $base-spacing-size;
    }
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $base-spacing-size;
      #{$type}-right: $size * $base-spacing-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $base-spacing-size;
      #{$type}-bottom: $size * $base-spacing-size;
    }
  }
  @each $directionKey, $direction in $spacing-direction {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $base-spacing-size;
      }
    }
  }
}
//width 100%
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}
.h-3 {
  height: 6rem;
}

.bb {
  border-bottom: 1px solid map-get($map: $colors, $key: "grey-border");
}

.arrow {
  width: 2.3rem;
  height: 2.3rem;
  border-radius: 50%;
  transform: rotate(-90deg);
}
.cursor {
  cursor: pointer;
}

.Nav-enter-active {
  transition: all 0.8s ease;
}
.Nav-leave-active {
  transition: all 0.8s ease;
}
.Nav-enter, .Nav-leave-to
  /* .slide-fade-leave-active for below version 2.1.8 */ {
  transform: translateX(-2rem);
  opacity: 0;
}


.sentence-enter-active {
  transition: all 0.8s ease;
}
.sentence-leave-active {
  transition: all 0.8s ease;
}
.sentence-enter, .sentence-leave-to
    /* .slide-fade-leave-active for below version 2.1.8 */ {
  transform: translateX(-2rem);
  opacity: 0;
}

@keyframes title {
  from {
    transform: translateX(-5rem);
    opacity: 0;
  }
  to {
    transform: translateX(0rem);
    opacity: 100%;
  }
}
@keyframes homepage-bg {
  from {
    transform: translateX(5rem);
    opacity: 0;
  }
  to {
    transform: translateX(0rem);
    opacity: 100%;
  }
}
@keyframes homepage-foot {
  from {
    transform: translateY(5rem);
    opacity: 0;
  }
  to {
    transform: translateY(0rem);
    visibility: visible;
    opacity: 100%;
  }
}
@keyframes homepage-body {
  from {
    transform: translateY(5rem);
    opacity: 0;
  }
  to {
    transform: translateY(0rem);
    opacity: 100%;
  }
}
@keyframes opacityShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 100%;
  }
}
@keyframes move {
  0% {
    transform: translateY(0);
  }
  10% {
    transform: translateY(-2px);
  }
  50% {
    transform: translateY(5px);
  }
  90% {
    transform: translateY(-2px);
  }
  100% {
    transform: translateY(0px);
  }
}
